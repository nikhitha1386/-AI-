from itertools import permutations

# Example distance matrix (symmetric, 4 cities)
dist = [[0, 10, 15, 20],
        [10, 0, 35, 25],
        [15, 35, 0, 30],
        [20, 25, 30, 0]]

n = len(dist)
best = float('inf')
for p in permutations(range(1, n)):
    cost = dist[0][p[0]] + sum(dist[p[i]][p[i+1]] for i in range(n-2)) + dist[p[-1]][0]
    best = min(best, cost)

print("Minimum tour cost:", best)
